from pathlib import Path
from instances import generate_instance, export_instance


def hex_grid_instances(export_dir=""):
    """Generate the set of instances over a hexagonal grid layout
       with homogeneous and uniformly distributed risk and job duration.
    """
    for rdist in ["uniform"]:
        for pdist in ["homogeneous", "uniform"]:
            # Generates graphs with 9, 17, 33, 65, 129 nodes
            for size in [(5, 1), (2, 9), (4, 11), (9, 11), (5, 41)]:
                G = generate_instance(
                    size,
                    nb_origins=1,
                    q=1,
                    topology="hexagonal",
                    risk_distribution=rdist,
                    job_duration_distribution=pdist,
                    seed=0
                )

                # We get the amount of nodes generated by the `size` of the hex grid
                # which should be 9, 17, 33, 65, 129 nodes
                n = len(G.nodes)
                export_instance(
                    G,
                    Path(f"{export_dir}/hx-n{n-1}-p{pdist[0]}-r{rdist[0]}-q{1}.dat")
                )

                # Generates instances with work-troops from 1 to n-1 in powers of 2
                for q in [2**i for i in range(1, 10) if 2**i < n] + [n-1]:
                    G = generate_instance(
                        size,
                        nb_origins=1,
                        q=q,
                        topology="hexagonal",
                        risk_distribution=rdist,
                        job_duration_distribution=pdist,
                        seed=0
                    )

                    export_instance(
                        G,
                        Path(f"{export_dir}/hx-n{n-1}-p{pdist[0]}-r{rdist[0]}-q{q}.dat")
                    )


def main():
    hex_grid_instances(export_dir="data/instances/hex")


if __name__ == "__main__":
    main()
